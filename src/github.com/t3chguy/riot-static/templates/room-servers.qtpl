{% import "github.com/t3chguy/riot-static/mxclient" %}



{% code type RoomServersPage struct {
    RoomInfo mxclient.RoomInfo
    Servers  mxclient.StringIntPairList
    PageSize int
    Page     int
} %}



{% func (p *RoomServersPage) printServer(server mxclient.StringIntPair) %}
    <tr>
        <td>{%s server.Key %}</td>
        <td>{%d server.Value %}</td>
    </tr>
{% endfunc %}



{% func (p *RoomServersPage) Title() %}
    Public Room Servers - {%s p.RoomInfo.Name %} - Riot Static
{% endfunc %}

{% func (p *RoomServersPage) Head() %}
{% endfunc %}

{% func (p *RoomServersPage) Header() %}
    {%= PrintRoomHeader(p.RoomInfo) %}
{% endfunc %}

{% stripspace %}
{% func (p *RoomServersPage) Body() %}

    {%= PaginatorCurPage(p) %}

    <table>
        <thead>
            <tr>
                <th>Server</th>
                <th>Number of Users in this Room</th>
            </tr>
        </thead>
        <tbody>
            {% for _, server := range p.Servers %}
                {%= p.printServer(server) %}
            {% endfor %}
        </tbody>
    </table>

    {%= PaginatorFooter(p) %}

    <a href="./">Back to Room List</a>

{% endfunc %}
{% endstripspace %}



{% code

    func (p *RoomServersPage) CurPage() int {
        return p.Page
    }
    func (p *RoomServersPage) HasNextPage() bool {
        return len(p.Servers) == p.PageSize
    }
    func (p *RoomServersPage) BaseUrl() string {
        return RoomBaseUrl(p.RoomInfo.RoomID) + "/servers/"
    }

%}